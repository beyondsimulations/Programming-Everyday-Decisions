---
title: "Tutorial V.III - Free Tasks"
subtitle: "Programming: Everyday Decision-Making Algorithms"
---

# Introduction

This is the final tutorial of the course. You'll have the opportunity to work on a task of your choice, implementing it with the tools learned throughout this course and leveraging AI assistance. Don't worry, you will see how easy it is to get going with AI!

::: {.callout-tip}
## Development Environment
We recommend developing these projects in standalone `.py` files rather than notebooks. Use an AI-assisted editor like Cursor to help with implementation.
:::

# Task Options

## 1. Stock Price Random Walk Simulator

Create a program that simulates and visualizes stock price random walks. The program should:

- Accept user input for:
  - Initial stock price
  - Simulation timeframe (days)
  - Daily price volatility (standard deviation)
- Generate 5 different random walk scenarios
- Visualize the price trajectories on a single plot

**Key libraries**: `numpy`, `matplotlib`

## 2. Pygame Jump & Run Game

Develop an interactive platformer game using Pygame. Suggested development approach:

1. Start with a basic game skeleton (player, platform, basic physics)
2. Incrementally add features:
   - Player movement and jumping mechanics
   - Collision detection
   - Obstacles and collectibles
   - Score tracking
   - Visual improvements

**Key library**: `pygame`

## 3. Interactive Stock Dashboard

Build a web-based dashboard for stock market analysis using Streamlit. Required features:

1. Stock price data visualization using `yfinance`
2. Interactive date range selection
3. Basic price statistics

**Optional enhancements:**

- Multi-stock comparison view
- Technical indicators (Moving averages, RSI, etc.)
- Stock selector dropdown
- Price prediction features

**Key libraries**: `streamlit`, `yfinance`, `pandas`, `plotly`

::: {.callout-note}
## AI Assistance
For each project, start by breaking down the requirements into smaller tasks. Use these as the basis for your AI prompts to generate initial code structure and implementations.
:::

---

*Congratulations on completing the tutorials! We hope you enjoyed the course and the tutorials and learned a lot!*

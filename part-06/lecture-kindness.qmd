---
title: "Lecture VI - Computational Kindness"
subtitle: "Programming with Python"
author: "Dr. Tobias Vlćek"
institute: "Kühne Logistics University Hamburg - Fall 2024"
title-slide-attributes:
    data-background-color: "#8C3048"

execute:
    echo: true

format:
    revealjs:
        theme: [default, ../styles.scss]
        transition: slide
        transition-speed: fast
        highlight-style: arrow
        code-overflow: wrap
        slide-number: true
        code-copy: true
        code-link: true
        preview-links: auto
        footer: " {{< meta title >}} | {{< meta author >}} | [Home](lecture-introduction.qmd)"
        output-file: lecture-presentation.html

    html:
        theme: litera

    pdf:
        documentclass: report

---

# [Introduction]{.flow} {.title}

## Computational Kindness

- Empathy in Algorithms: The chapter emphasizes the importance of designing algorithms that take into account the human element, promoting kindness and understanding in interactions.

- Balancing Efficiency and Humanity: It discusses the trade-offs between optimizing for efficiency and maintaining humane, considerate interactions.

- Practical Applications: Examples are provided on how computational kindness can be applied in everyday life, such as in scheduling meetings or managing communications, to reduce stress and improve collaboration.

# [Key Concepts]{.flow}

- **Optimal Stopping**: How to decide when to stop looking for better options.
- **Explore/Exploit Tradeoff**: Balancing between trying new things and sticking with known options.
- **Caching**: Storing and reusing information to improve performance.
- **Scheduling**: Efficiently managing tasks and time.
- **Randomness**: Understanding and working with uncertainty.

# [How to continue?]{.flow} {.title}

## How to continue learning?

- We have covered a lot of topics, but there are more to explore!
- Bayesian Statistics, Overfitting, Game Theory, etc.

## Bayes' Rule

- Fundamental theorem in probability theory
- Updates the probability of a hypothesis based on new evidence
- Used in statistics, machine learning, and decision-making
- Helps make informed predictions and decisions under uncertainty

## Overfitting

- Occurs when a model learns the training data too well
- Captures noise and outliers rather than the underlying pattern
- Results in poor generalization to new data
- Techniques to prevent overfitting:
  - Cross-validation
  - Regularization

## Game Theory

- Study of strategic interactions among rational decision-makers
- Analyzes situations with multiple agents and their strategies
- Applications include:
  - Economics
  - Politics
  - Evolutionary biology

## Networking

- Study of information exchange over networks
- Includes understanding protocols and data transmission
- Optimizes network resources
- Crucial for efficient communication in computer networks and the internet

## Relaxation

- Simplifies complex problems to make them more tractable
- Involves relaxing certain constraints
- Provides insights or approximate solutions
- Used in optimization and linear programming

## How to continue programming?

- The best way to continue learning is to [keep programming in the future]{.highlight}
- Potentially, you will continue to do so during your studies
- Coding in your Thesis is a another great way to improve
- Try to find a way to apply programming in your work
- **There are many interesting topics to explore!**

## Advent of Code

- [Advent of Code](https://adventofcode.com/) is a fun way to keep programming
- Here you can solve programming puzzles during Advent
- It is completely free and ad-free and starts at 01.12.

<center>    
<iframe src="https://giphy.com/embed/F1Gh6u8YEG3FctxYWc" width="280" height="280" style="" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
</center>

## That's it for the Lecture Series!

- We now have covered the basics of Python
- I hope you enjoyed the lecture and found it helpful
- If you have questions or feedback, [please let me know!]{.highlight}
- I wish you all the best for your studies and your career!

## {background-color="#000000"}

<center>
<iframe src="https://giphy.com/embed/YVg3fCdaBpLEc" width="480" height="355" style="" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
</center>

# [Q&A]{.flow}

# [Literature]{.flow} {.title}

## Interesting literature to start

- Christian, B., & Griffiths, T. (2016). Algorithms to live by: the computer science of human decisions. First international edition. New York, Henry Holt and Company.[^4]

[^4]: The main inspiration for this lecture. Nils and I have read it and discussed it in depth, always wanting to translate it into a course.


## Books on Programming

- Downey, A. B. (2024). Think Python: How to think like a computer scientist (Third edition). O’Reilly. [Here](https://greenteapress.com/wp/think-python-3rd-edition/)
- Elter, S. (2021). Schrödinger programmiert Python: Das etwas andere Fachbuch (1. Auflage). Rheinwerk Verlag.

. . .

::: {.callout-note}
Think Python is a great book to start with. It's available online for free. Schrödinger Programmiert Python is a great alternative for German students, as it is a very playful introduction to programming with lots of examples.
::: 

## More Literature

For more interesting literature, take a look at the [literature list](../general/literature.qmd) of this course.